<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.LocationMapper">

    <!-- get a location by its id -->
    <select id="getLocationById" resultType="com.example.demo.model.Location">
        <if test="lId != null">
            SELECT * FROM location WHERE l_id = #{lId}
        </if>
    </select>

    <!-- get a location by city -->
    <select id="getLocationByName" resultType="com.example.demo.model.Location">
        <if test="lName != null">
            SELECT * FROM location WHERE l_city = #{lCity}
        </if>
    </select>

    <!-- get locations by country -->
    <select id="getLocationsByCountry" resultType="com.example.demo.model.Location">
        <if test="lCountry != null">
            SELECT * FROM location WHERE l_country = #{lCountry}
        </if>
    </select>

    <!-- get locations by country code -->
    <select id="getLocationsByCountryCode" resultType="com.example.demo.model.Location">
        <if test="lCountryCode != null">
            SELECT * FROM location WHERE l_country_code = #{lCountryCode}
        </if>
    </select>


    <!-- add a location -->
    <insert id="addLocation" parameterType="com.example.demo.model.Location">
        INSERT INTO location
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="lId != null">
                l_id,
            </if>
            <if test="lName != null">
                l_name,
            </if>
            <if test="lCity != null">
                l_city,
            </if>
            l_state,
            <if test="lCountry != null">
                l_country,
            </if>
            <if test="lCountryCode != null">
                l_country_code,
            </if>
            <if test="lPostcode != null">
                l_postcode,
            </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="lId != null">
                #{lId},
            </if>
            <if test="lName != null">
                #{lName},
            </if>
            <if test="lCity != null">
                #{lCity},
            </if>
            #{lState},
            <if test="lCountry != null">
                #{lCountry},
            </if>
            <if test="lCountryCode != null">
                #{lCountryCode},
            </if>
            <if test="lPostcode != null">
                #{lPostcode},
            </if>
        </trim>
    </insert>

    <!-- delete locations by id -->
    <delete id="deleteLocations" parameterType="com.example.demo.model.Location">
        DELETE FROM location WHERE l_id IN
        <foreach collection="list" item="lId" separator="," open="(" close=")">
            #{lId}
        </foreach>
    </delete>

    <!-- add more than one location -->
    <insert id="addLocations" parameterType="com.example.demo.model.Location">
        INSERT INTO location (l_name, l_city, l_state, l_country, l_country_code, l_postcode)
        VALUES
        <foreach collection="list" item="location" separator=",">
            (#{location.lName}, #{location.lCity},
            #{location.lState}, #{location.lCountry}, #{location.lCountryCode},
            #{location.lPostcode})
        </foreach>
    </insert>

    <!-- update more than one location -->
    <update id="updateLocations" parameterType="com.example.demo.model.Location">
        <foreach collection="list" item="location" open="" close="" separator=";">
            UPDATE location
            <set>
                l_name = #{location.lName},
                l_city = #{location.lCity},
                l_state = #{location.lState},
                l_country = #{location.lCountry},
                l_country_code = #{location.lCountryCode},
                l_postcode = #{location.lPostcode}
            </set>
            WHERE l_id = ${location.lId}
        </foreach>
    </update>


</mapper>